services:
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    restart: always

  frontend:
    image: ghcr.io/henrygoodman/ww-frontend:latest
    volumes:
      - ./shared-types:/app/shared-types
    environment:
      NODE_ENV: production
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    env_file:
      - ./frontend/.env
    restart: always

  backend:
    image: ghcr.io/henrygoodman/ww-backend:latest
    volumes:
      - ./shared-types:/app/shared-types
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    env_file:
      - ./backend/.env
    depends_on:
      - db
    restart: always

  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    restart: always

  redis:
    image: redis:6
    container_name: redis_service
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    restart: always

volumes:
  postgres_data:
